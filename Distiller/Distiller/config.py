import os
from datetime import datetime
import string
import random

class Config(object):
    """Содержит базовые параметры конфигурации приложения"""

    #Наименование управляемого устройства
    DEVICE_NAME = u'Дистиллятор'
    
    # Путь к каталогу запуска программы
    BASEDIR = os.path.abspath(os.path.dirname(__file__))
    # Каталог для хранения журналов работы
    LOGSDIR = os.path.join(BASEDIR, 'logs')
    os.makedirs(LOGSDIR, exist_ok=True)

    # Определяет, включен ли режим отладки.
    # Если включен, flask будет показывать
    # подробную отладочную информацию. Если выключен -
    # - 500 ошибку без какой-либо дополнительной информации.
    DEBUG = False

    # Включение защиты против "Cross-site Request Forgery (CSRF)"
    CSRF_ENABLED = True

    # Случайный ключ, который будет использоваться для подписи
    # данных, например cookies.
    SECRET_KEY = ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase + string.digits) for x in range(random.randint(10,16)))

    # URI используемый для подключения к базе данных
    # Основная база данных
    SQLALCHEMY_DATABASE_URI = "sqlite:///" + os.path.join(BASEDIR, "Distiller.db")
    #Базы данных приложения
    SQLALCHEMY_BINDS = {'Distiller':'sqlite:///' + os.path.join(BASEDIR, "Distiller.db"),
                        'log':'sqlite:///' + os.path.join(LOGSDIR,
                                                          datetime.now().strftime('%Y_%m_%d %H-%M-%S.db'))}
    SQLALCHEMY_TRACK_MODIFICATIONS = False

    #Места установки термометров
    T_LOCATION=['Низ', '1/2', 'Верх', 'Деф', 'Конд']

    #Распределение ножек Raspberry Pi
    # Сеть One-Wire
    OW_PIN=7    #GPIO4
    # Вывод управления нагревателем
    HEADER_PIN=18   #GPIO24
    # Вход синхронизации с 220V 50Hz (не используется)
    #SYNC_PIN=12
    # Вывод управления дефлегматором
    DEPH_PIN=11     #GPIO17
    # Вывод управления конденсатором
    CONDER_PIN=12   #GPIO18

    #Параметры перегона бражки по умолчанию
    #(индивидульны для колонны)
    #PARAMETERS1=[
    #    ('Tcond',    29.0, 'Температура срабатывания клапана конденсатора'),
    #    ('Tend',     84.5, 'Температура низа колонны, при которой завешается перегон'),
    #    ('Tdephlock',45.0, 'Температура затворения дефлегматора'),
    #    ('Tbdeph', 202.25, 'Базовая температура дефлегматора'),
    #    ('Kdeph',1.813725, 'Коэффициент снижения температуры срабатывания клапана дефлегматора'),
    #    ('Pbase',   -49.5, 'Базовая мощность нагрева (предзахлёбная при 13% спирта в кубе)'),
    #    ('Kp',      0.908, 'Коэффициент роста мощности нагрева с уменьшением спирта в кубе'),
    #    ('Pst',      13.0, 'Мощность стабилизации (мощность, компенсирующая теплопотери)'),
    #    ('tSt',      7.0, 'Время стабилизации колонны (антипена), мин'),
    #    ('tCooling', 30.0, 'Таймаут ожидания охлаждения, сек'),
    #    ('tMeasure',  6.0, 'Таймаут ожидания измерения температур, сек'),
    #    ]

    #Параметры перегона спирта-сырца по умолчанию
    #PARAMETERS2=[
    #    ('Tcond',    29.0, 'Температура срабатывания клапана конденсатора'),
    #    ('Tend',     84.5, 'Температура низа колонны, при которой завешается перегон'),
    #    ('Tdephlock',45.0, 'Температура затворения дефлегматора'),
    #    ('Tbdeph', 151.53, 'Базовая температура регулирования дефлегматора'),
    #    ('Kdeph',1.275862, 'Коэффициент снижения температуры срабатывания клапана дефлегматора'),
    #    ('Pbase',   -37.0, 'Базовая мощность нагрева (предзахлёбная при 84% спирта в кубе)'),
    #    ('Kp',0.796460177, 'Коэффициент роста мощности нагрева с уменьшением спирта в кубе'),
    #    ('Pst',      13.0, 'Мощность стабилизации (мощность, компенсирующая теплопотери)'),
    #    ('tSt',       5.0, 'Время стабилизации колонны, мин'),
    #    ('tCooling', 30.0, 'Таймаут ожидания охлаждения, сек'),
    #    ('tMeasure',  6.0, 'Таймаут ожидания измерения температур, сек'),
    #    ('Thdeph',   50.0, 'Температура срабатывания клапана дефлегматора при отборе голов'),
    #    ('tEAF',    600.0, 'Время отбора голов, мин'),
    #    ]
  
